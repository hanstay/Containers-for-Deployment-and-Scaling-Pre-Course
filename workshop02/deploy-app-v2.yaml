# command used
# kc create deploy bggapp-deploy -nbggns --image stackupiss/bgg-backend:v1 -oyaml --dry-run=client > test-generate-scaffold.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bgg-app-deploy
  namespace: bggns
  labels:
    app: bgg-app
spec:
  replicas: 3
  minReadySeconds: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
  selector:
    matchLabels:
      app: bgg-app
  template:
    metadata:
      name: bgg-pod
      namespace: bggns
      labels:
        app: bgg-app
    spec:
      volumes:
        - name: bgg-local-config
          configMap: 
            name: bgg-cm
        - name: bgg-local-secret
          secret: 
            secretName: bgg-secrets
      containers:
      - image: stackupiss/bgg-backend:v2
        name: bgg-backend
        livenessProbe:
          httpGet:
            path: /healthz
            port: 3000
          periodSeconds: 60
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /healthz
            port: 3000
          periodSeconds: 60
          successThreshold: 1
        imagePullPolicy: IfNotPresent
        envFrom:
        - configMapRef:
            name: bgg-cm
        - secretRef:
            name: bgg-secrets
        volumeMounts:
          - name:  bgg-local-config
            mountPath: /var/lib/config
          - name:  bgg-local-secret
            mountPath: /var/lib/secret
        ports:
        - containerPort: 3000

---
apiVersion: v1
kind: Service
metadata:
  name: bgg-app-svc
  namespace: bggns
  labels:
    app: bgg-app
spec:
  type: ClusterIP
  selector:
    app: bgg-app
  ports:
  - name: db-svc-port 
    port: 80
    targetPort: 3000

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bgg-app-ing
  namespace: bggns 
  labels:
    app: bgg
spec:
  # controller class name
    ingressClassName: nginx
    rules:
    - host: bgg-209.38.56.108.nip.io
      http:
        paths: 
        - path: /
          pathType: Prefix # anything matching '/'
          backend:
            service:
              name: bgg-app-svc
              port: 
                number: 80